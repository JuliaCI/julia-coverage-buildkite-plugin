#!/bin/bash
set -euo pipefail


echo "--- :julia: Processing coverage"

# parse the 'dirs' property
dirs=()
while IFS='=' read -r name _ ; do
  if [[ $name =~ ^(BUILDKITE_PLUGIN_JULIA_COVERAGE_DIRS_[0-9]+) ]] ; then
    dirs+=( "${!name}" )
  fi
done < <(env | sort)
if [ ${#dirs[@]} -eq 0 ]; then
    dirs+=( "src" )
fi

julia -e 'using Pkg
          Pkg.UPDATED_REGISTRY_THIS_SESSION[] = true
          Pkg.activate("julia-coverage", shared=true)
          Pkg.add(PackageSpec(name="CoverageTools", uuid="c36e975a-824b-4404-a568-ef97ca766997", version="1"))
          using CoverageTools
          pf = vcat(map(process_folder, ARGS)...)
          LCOV.writefile("lcov.info", pf)' "${dirs[@]}"


codecov=${BUILDKITE_PLUGIN_JULIA_COVERAGE_CODECOV:-false}

# Ref: https://github.com/codecov/codecov-bash/blob/master/SHA256SUM
codecovsh_sha256=89c658e261d5f25533598a222fd96cf17a5fa0eb3772f2defac754d9970b2ec8

if [ "$codecov" = true ] ; then
    echo "--- :codecov: Submitting to Codecov"

    # NOTE: we use the Bash uploader because
    #       Coverage.jl doesn't support Buildkite
    codecovsh="$(mktemp)"
    trap 'rm -f "$codecovsh"' EXIT
    curl --output "$codecovsh" -s https://codecov.io/bash
    if sha256sum < "$codecovsh" | grep  "$codecovsh_sha256" >/dev/null; then
        echo "chcksum verified"
    else
        echo "unmatched chcksum"
        sha256sum "$codecovsh"
        exit 99
    fi
    bash "$codecovsh" -f lcov.info
fi
